-------------------- Theory --------------------

Объект предназначен для хранения коллекций значений разных типов.
Объект обычно представляет одну сущность, которую можно описать с помощью набора свойств.
Информация о свойствах в объекте хранится в формате ключ - значение.

- Для создания объекта можно использовать 2 способа:
1) let obj = new Object() - Создание объекта с помощью конструктора встроенного в JavaScript объект - Object,
через конструкция new Object

2) let obj = {} - Запись в переменную пустых фигурных скобок. 

При создании объекта можно сразу указать его свойства:
let student = {
    name: 'John Smith',
    age: 19
};
Здесь объявлена переменная student, и в нее записан объект содержащий 2 свойства, name со строкой и age с числом.

- Если название свойства состоит из нескольких слов, то оно указывается в кавычках:

let student = {
    name: 'John Smith',
    age: 19
    'graduated at': 2020 // 2 слова в свойстве
};
Но обычно на практике такие названия свойств, состоящие из 2-ух свойств записывают способом просто CamelCase

- Чтобы считать значение свойства к нему нужно обратиться через имя объекта:
student.age
student - имя объекта
age - имя свойства

И мы получим значение, содержащееся в значении age

- Другой способ - это обращение через квадратные скобки:
student['age']
имя объекта, и в квадратных скобках строка с именем свойства.
Обратите внимание на то, что имя свойства это именно строка. Она берется в кавычки.
Если мы напишем имя свойства без кавычек student[age] , то компьютер будет искать переменную,
в данном случае переменную age и пытаться подставить ее значение.

Если имя свойства состоит из нескольких слов, то к нему можно обратиться только с помощью квадратных скобок:
student['graduated at']

- Если обратиться к несуществующему свойству объекта, то вернется значение undefined

let student = {
    name: 'John Smith',
    age: 19
    'graduated at': 2020
};
console.log(student.class); // undefined
// В нашем объекте student нет свойства class

- При создании объекта значение свойства можно указывать не только напрямую, но и с помощью переменной:
let age = 19
let student = {
    name: 'John Smith',
    age: age
};
// - Была объявлена переменная age со значением 19,
затем мы создаем объект и записываем его в переменную student
свойству age мы присваиваем значение переменной age, то есть число 19

- Если у нас совпадают имя переменной в которой хранится значение и имя свойства куда это значение должно
 быть записано, то можно использовать сокращенную запись:
let age = 20
let student = {
    name: 'John Smith',
    age
};










